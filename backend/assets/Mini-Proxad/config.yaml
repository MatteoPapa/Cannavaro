# Service configuration
service_name: {{SERVICE_NAME}}

# The port and ip that the proxy will expose publicly
# aliases: client_ip, client_port
from_ip: 0.0.0.0
from_port: {{FROM_PORT}}
from_max_history: 10Mib
from_timeout: 60s

# The port and ip for the internal service
# aliases: server_ip, server_port
to_ip: {{TO_IP}}
to_port: {{TO_PORT}}
to_max_history: 100Mib
to_timeout: 60s

# The path to the python filter
# This will be automatically reloaded
script_path: /root/{{SERVICE_NAME}}/proxy_folder_{{SERVICE_NAME}}/proxy_filters.py

# TLS configuration
# If the tls_ca_file is present the proxy will authenticate the service
tls_enabled: {{TLS_ENABLED}}
tls_cert_file: {{CERT_PATH}}
tls_key_file: {{KEY_PATH}}
#tls_ca_file: ./test/keys/ca-cert.pem

# Pcap dumper configuration
# The dump_format acceps the following format values
#   - {service} will be replaced with the service name
#   - {timestamp} will be replaced with the time of the dump
#   - {client_ip} {from_ip} will be replaced with the client_ip
#   - {server_ip} {to_ip} will be replaced with the server_ip
dump_enabled: {{DUMP_ENABLED}}
dump_path: {{DUMP_PATH}}
dump_format: "{service}_{server_port}_{timestamp}.pcap"
dump_interval: 30s
dump_max_packets: 256

# Http configuration
# When enabled the requests and responses are parsed by the proxy.
# A different filter is called with the HttpResponse and HttpRequest.
#
# Keep alive will allow the proxy to reuse the connection to serve
# multiple responses/requests. If enabled dumps will be delayed!
#
# Requests (or responses!) with a body greater then the max body size
# will automatically kill the flow
http_enabled: {{HTTP_ENABLED}}
http_keep_alive: false
http_half_close: true
http_date_header: false
http_max_body: 20MB